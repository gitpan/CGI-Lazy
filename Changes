Revision history for Perl extension CGI::Lazy.
1.03	- Fixed bug in Boilerplate where checkbox 'checked' tmplvar wasn't populating fieldname
	- Added Controller widget for use in Composites with Datasets.  Dataset will query based on valuse in Controller
	- Added Support for Controller to Boilerplate
	- Removed use warnings from all modules.

1.02	- Completed Authz and Authn
	- extended RecordSet to handle password fields for Authn
	- Cleaned up Javascript to fix multiple issues for pushrow.
	- Added support for Password fields in recordset.  Their values will be automatically hashed in accordance with Authn, and their values will never be selected.
	- Fixed multiple bugs relating to webcontrols in Datasets

1.01	- Fixed Boilerplate for changes from 1.00.  It was forgotten, and boilerplate objects did nothing
	- Removed last (hopefully) references to Ajax object from pod
	- Added to Dataset so that single datasets with webcontrols have the display values, not the values themselves show up on multiple return templates
	- Fixed native search issues for Composite.
	- Added more encapsulation to Javascript for dataset pushrow to deal with IE issues.  

1.00	-changed Ajax class to Widget.
	-modified Dataset so it can take an existing recordset, or just a hashref for a recordset, which will be created on the fly.
	-likewise modded Composite so it can take data structures as well as widgets.
	-fixed bug in Dataset where multiple search results wouldn't display properly, and wouldn't take one to a particular record.
	-changed like and likevars to searchLike and searchLikeVars respectively to remove ambiguity.
	-fixed bug in Dataset where multiple returns on a single dataset would, when searching for a particular primary key value, would use 'like' if searchLike was set
	-fixed bug in checkbox handling where searches took unchecked checkboxes to be checked (updeate in Javascript.pm)
	-added code to Recordset so unchecked checkboxes would write to db as ''

0.12	-fixed Dataset to respect order of arrays or hashes sent to it for select webcontrols
	-added sql support for select widgets in dataset
	-added missing method to ErrorHandler to handle CSS object errors
	-fixed bugs in CSS and Javascript modules where paths to files weren't being created correctly.
	-fixed bug in Template where explicit slash in tmplDir property could end up doubling.
	-updated Lazy POD
	-fixed all modules to throw no uninitialized or redefinition warnings.
	-renamed Auth.pm to Authn.pm

0.11	-added ajax search to dataset
	-renamed Ajax method ajaxSelect to select.  ajaxSelect method now calls select and returns JSON to web
	-changed Composite to reflect those changes
	-added js object of visible field names in dataset for built in ajax search.
	-renamed multiSearchReturn in Javascript for dataset to searchReturn.  now used by both search and multiSearch.
	-reworked Boilerplate and renamed to CGI::Lazy::Template::Boilerplate.  Now takes widgets as it's argument and builds template stubs for the widgets.
	-added support for selects, checkboxes, and radio buttons to Dataset and Recordset, also Boilerplate
	-fixed problem in Ajax where edited records deliberately set blank were not updateing database as such.  Insert won't insert blanks, but Update will now.

0.10	-added Image and CSS modules
	-moved jsload into Javascript module from Ajax, renamed it to just 'load'.
	-removed redundant jswrap method from Ajax
	-fixed typos in Boilerplate
	-fixed header function in Lazy so can pass hash or hashref as you please

0.09	-added ability to do sql binds in updateadditional and insertadditional in RecordSet
	-added insertIds deleteIds updateIds methods to Ajax for easy retrieval of primary keys on which each operation will be performed.
	-reworked DB.pm so gethash method takes query, id, @binds
	-Fixed Ajax to deal with above change

0.08	-updated documentation in Recordset
	-added ability in Dataset to have multi headers in div separate from data, so a scrolling div won't lose headings on scroll
	-fixed issue in Boilerplate where dataset, singleMulti stubs were building with text inputs, not links
	-added ability to use binds in $recordset->where method

0.07	-fixed bug in errorhandler where it was calling lazyversion incorrectly.
	-added ajaxBlank method to Composite widget
	-fixed bug in Composite where providing no type causes deep recursion
	-fixed bug in Dataset where field id not set correctly causing searchMulti to bomb

0.06	-removed submit from boilerplate and dataset.  not flexible enough.  add it to the template as needed
	-changed non-external methods in Debug to return text, not print, and to print them to a div of id="debug"
	-added ability for dataset multiple to have no headers
	-added headings method to dataset to return tmpl vars with header strings
	-added header tmpl to boilerplate
	-fixed bug in Composite ParentChild for inserting records with autoincrement primary keys
	-added get mehtod to DB for returning only a single value
	-fixed bug in Dataset where singles couldn't insert.
	-fixed bug in Dataset where headings method didn't have any data till after a select.
	-fixed bug in Composite ParentChild where a search on the parent that returned no data put things into an endless loop

0.05	-removed bad js call to pushRow in Boilerplate Dataset single template
	-added some more error trapping to Javascript
	-extended Recordset to allow for table.field if table is recordset's native table
	-fixed bug between Ajax, Dataset, and Javascript that prevented insert of records > 9
	-added client side javascript example for Composite, Dataset.
	-added full Composite example to Composite.pm
	-improved documentation of Ajax.pm
	-extended ajaxSearch method of Ajax objects to allow for like queries.  can set like => 'liketype' to apply to web inputs or likevars => 'liketype' to do likes off of cgi vars
	-changed children and childarray methods of Composite to members and memberarray for accuracy sake, and to prevent confusion for parent/child relationships between member widgets
	-likewise changed Dataset property parentId to containerId
	-added 'type' to Composite, and added type parentChild which, when set up correctly, will handle select/insert/update on member widgets based on configureation.  delete will wait for further pondering.

0.04	-moved $VERSION into Lazy.pm 'cos ModPerl and Auth versions were overwriting it
	-fixed bug in Boilerplate.pm where __WIDGETID__ tag wasn't being parsed.
	-cleaned up deprecated code in Ajax.pm and Dataset.pm for parsing widget-specific javascript.  No real change, but build mechanism and naming convention much clearer now.
	-added readonly mode to Dataset
	-set Template.pm to die_on_bad_params => 0  It won't care now if you output a parameter to a template that doesn't contain that tag- will just ignore it

0.03	-split Authn.pm and Authz.pm ito separate distros
	-lowered requirements in Makefile.PL  they were unnecessarily high

0.02-r3 -fixed pod formatting again.  no changes to code

0.02-r2 -uploaded partial distro to CPAN  oops.

0.02	Sat Aug 2
	-reformatted POD so it will display on cpan
	-pulled ModPerl.pm from distribution so tests pass.  ModPerl will be distributed separately

0.01  Tue Jul 29 15:37:23 2008
	- original version; created by h2xs 1.23 with options
		-X CGI::Lazy
	then added the real code... here goes...

